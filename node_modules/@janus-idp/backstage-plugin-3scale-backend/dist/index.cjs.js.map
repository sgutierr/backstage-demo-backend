{"version":3,"file":"index.cjs.js","sources":["../src/clients/ThreeScaleAPIConnector.ts","../src/providers/config.ts","../src/providers/ThreeScaleApiEntityProvider.ts"],"sourcesContent":["import { APIDocs, Proxy, Services } from './types';\n\nexport function listServices(\n  baseUrl: string,\n  access_token: string,\n  page: number,\n  size: number,\n): Promise<Services> {\n  return fetch(\n    `${baseUrl}/admin/api/services.json?access_token=${access_token}&page=${page}&size=${size}`,\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json() as Promise<Services>;\n  });\n}\n\nexport function listApiDocs(\n  baseUrl: string,\n  access_token: string,\n): Promise<APIDocs> {\n  return fetch(\n    `${baseUrl}/admin/api/active_docs.json?access_token=${access_token}`,\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json() as Promise<APIDocs>;\n  });\n}\n\nexport function getProxyConfig(\n  baseUrl: string,\n  access_token: string,\n  service_id: number,\n): Promise<Proxy> {\n  return fetch(\n    `${baseUrl}/admin/api/services/${service_id}/proxy.json?access_token=${access_token}`,\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json() as Promise<Proxy>;\n  });\n}\n","import { readTaskScheduleDefinitionFromConfig } from '@backstage/backend-tasks';\nimport { Config } from '@backstage/config';\n\nimport { ThreeScaleConfig } from './types';\n\nexport function readThreeScaleApiEntityConfigs(\n  config: Config,\n): ThreeScaleConfig[] {\n  const providerConfigs = config.getOptionalConfig(\n    'catalog.providers.threeScaleApiEntity',\n  );\n  if (!providerConfigs) {\n    return [];\n  }\n  return providerConfigs\n    .keys()\n    .map(id =>\n      readThreeScaleApiEntityConfig(id, providerConfigs.getConfig(id)),\n    );\n}\n\nfunction readThreeScaleApiEntityConfig(\n  id: string,\n  config: Config,\n): ThreeScaleConfig {\n  const baseUrl = config.getString('baseUrl');\n  const accessToken = config.getString('accessToken');\n  const systemLabel = config.getOptionalString('systemLabel');\n  const ownerLabel = config.getOptionalString('ownerLabel');\n  const addLabels = config.getOptionalBoolean('addLabels') || true;\n\n  const schedule = config.has('schedule')\n    ? readTaskScheduleDefinitionFromConfig(config.getConfig('schedule'))\n    : undefined;\n\n  return {\n    id,\n    baseUrl,\n    accessToken,\n    systemLabel,\n    ownerLabel,\n    addLabels,\n    schedule,\n  };\n}\n","import { PluginTaskScheduler, TaskRunner } from '@backstage/backend-tasks';\nimport {\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  ApiEntity,\n  Entity,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  EntityProvider,\n  EntityProviderConnection,\n} from '@backstage/plugin-catalog-backend';\n\nimport { Logger } from 'winston';\n\nimport {\n  getProxyConfig,\n  listApiDocs,\n  listServices,\n} from '../clients/ThreeScaleAPIConnector';\nimport {\n  APIDocElement,\n  APIDocs,\n  Proxy,\n  ServiceElement,\n  Services,\n} from '../clients/types';\nimport { readThreeScaleApiEntityConfigs } from './config';\nimport { ThreeScaleConfig } from './types';\n\nexport class ThreeScaleApiEntityProvider implements EntityProvider {\n  private static SERVICES_FETCH_SIZE: number = 500;\n  private readonly env: string;\n  private readonly baseUrl: string;\n  private readonly accessToken: string;\n  private readonly logger: Logger;\n  private readonly scheduleFn: () => Promise<void>;\n  private connection?: EntityProviderConnection;\n\n  static fromConfig(\n    configRoot: Config,\n    options: {\n      logger: Logger;\n      schedule?: TaskRunner;\n      scheduler?: PluginTaskScheduler;\n    },\n  ): ThreeScaleApiEntityProvider[] {\n    const providerConfigs = readThreeScaleApiEntityConfigs(configRoot);\n\n    if (!options.schedule && !options.scheduler) {\n      throw new Error('Either schedule or scheduler must be provided.');\n    }\n\n    return providerConfigs.map(providerConfig => {\n      if (!options.schedule && !providerConfig.schedule) {\n        throw new Error(\n          `No schedule provided neither via code nor config for ThreeScaleApiEntityProvider:${providerConfig.id}.`,\n        );\n      }\n\n      const taskRunner =\n        options.schedule ??\n        options.scheduler!.createScheduledTaskRunner(providerConfig.schedule!);\n\n      return new ThreeScaleApiEntityProvider(\n        providerConfig,\n        options.logger,\n        taskRunner,\n      );\n    });\n  }\n\n  private constructor(\n    config: ThreeScaleConfig,\n    logger: Logger,\n    taskRunner: TaskRunner,\n  ) {\n    this.env = config.id;\n    this.baseUrl = config.baseUrl;\n    this.accessToken = config.accessToken;\n    this.logger = logger.child({\n      target: this.getProviderName(),\n    });\n\n    this.scheduleFn = this.createScheduleFn(taskRunner);\n  }\n\n  private createScheduleFn(taskRunner: TaskRunner): () => Promise<void> {\n    return async () => {\n      const taskId = `${this.getProviderName()}:run`;\n      return taskRunner.run({\n        id: taskId,\n        fn: async () => {\n          try {\n            await this.run();\n          } catch (error) {\n            this.logger.error(error);\n          }\n        },\n      });\n    };\n  }\n\n  getProviderName(): string {\n    return `ThreeScaleApiEntityProvider:${this.env}`;\n  }\n\n  async connect(connection: EntityProviderConnection): Promise<void> {\n    this.connection = connection;\n    await this.scheduleFn();\n  }\n\n  async run(): Promise<void> {\n    if (!this.connection) {\n      throw new Error('Not initialized');\n    }\n\n    this.logger.info(`Discovering ApiEntities from 3scale ${this.baseUrl}`);\n\n    const entities: Entity[] = [];\n\n    let page: number = 0;\n    let services: Services;\n    let apiDocs: APIDocs;\n    let fetchServices: boolean = true;\n    while (fetchServices) {\n      services = await listServices(\n        this.baseUrl,\n        this.accessToken,\n        page,\n        ThreeScaleApiEntityProvider.SERVICES_FETCH_SIZE,\n      );\n      apiDocs = await listApiDocs(this.baseUrl, this.accessToken);\n      for (const element of services.services) {\n        const service = element;\n        this.logger.debug(`Find service ${service.service.name}`);\n\n        // Trying to find the API Doc for the service and validate if api doc was assigned to an API.\n        const apiDoc = apiDocs.api_docs.find(obj => {\n          if (obj.api_doc.service_id !== undefined) {\n            return obj.api_doc.service_id === service.service.id;\n          }\n          return false;\n        });\n\n        const proxy = await getProxyConfig(\n          this.baseUrl,\n          this.accessToken,\n          service.service.id,\n        );\n        if (apiDoc !== undefined) {\n          this.logger.info(apiDoc);\n          const apiEntity: ApiEntity = this.buildApiEntityFromService(\n            service,\n            apiDoc,\n            proxy,\n          );\n          entities.push(apiEntity);\n          this.logger.debug(`Discovered ApiEntity ${service.service.name}`);\n        }\n      }\n\n      if (\n        services.services.length <\n        ThreeScaleApiEntityProvider.SERVICES_FETCH_SIZE\n      ) {\n        fetchServices = false;\n      }\n      page++;\n    }\n\n    this.logger.info(`Applying the mutation with ${entities.length} entities`);\n\n    await this.connection.applyMutation({\n      type: 'full',\n      entities: entities.map(entity => ({\n        entity,\n        locationKey: this.getProviderName(),\n      })),\n    });\n  }\n\n  private buildApiEntityFromService(\n    service: ServiceElement,\n    apiDoc: APIDocElement,\n    proxy: Proxy,\n  ): ApiEntity {\n    const location = `url:${this.baseUrl}/apiconfig/services/${service.service.id}`;\n\n    const spec = JSON.parse(apiDoc.api_doc.body);\n\n    return {\n      kind: 'API',\n      apiVersion: 'backstage.io/v1alpha1',\n      metadata: {\n        annotations: {\n          [ANNOTATION_LOCATION]: location,\n          [ANNOTATION_ORIGIN_LOCATION]: location,\n        },\n        //  TODO: add tenant name\n        name: `${service.service.system_name}`,\n        description:\n          spec.info.description || `Version: ${service.service.description}`,\n        //  TODO: add labels\n        //  labels: this.getApiEntityLabels(service),\n        links: [\n          {\n            url: `${this.baseUrl}/apiconfig/services/${service.service.id}`,\n            title: '3scale Overview',\n          },\n          {\n            url: `${proxy.proxy.sandbox_endpoint}`,\n            title: 'Staging Apicast Endpoint',\n          },\n          {\n            url: `${proxy.proxy.endpoint}`,\n            title: 'Production Apicast Endpoint',\n          },\n        ],\n      },\n      spec: {\n        type: 'openapi',\n        lifecycle: this.env,\n        system: '3scale',\n        owner: '3scale',\n        definition: apiDoc.api_doc.body,\n      },\n    };\n  }\n}\n"],"names":["readTaskScheduleDefinitionFromConfig","ANNOTATION_LOCATION","ANNOTATION_ORIGIN_LOCATION"],"mappings":"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"}