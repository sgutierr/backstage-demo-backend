'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var backendPluginApi = require('@backstage/backend-plugin-api');
var router = require('./cjs/router-6f51bb7d.cjs.js');
var backendCommon = require('@backstage/backend-common');
require('helmet');
require('express');
require('express-promise-router');
require('fs-extra');
require('path');
require('@backstage/config-loader');
require('luxon');
require('lodash/partition');
require('globby');

const appPlugin = backendPluginApi.createBackendPlugin((options) => ({
  pluginId: "app",
  register(env) {
    env.registerInit({
      deps: {
        logger: backendPluginApi.coreServices.logger,
        config: backendPluginApi.coreServices.config,
        database: backendPluginApi.coreServices.database,
        httpRouter: backendPluginApi.coreServices.httpRouter
      },
      async init({ logger, config, database, httpRouter }) {
        const {
          appPackageName,
          staticFallbackHandler,
          disableConfigInjection,
          disableStaticFallbackCache
        } = options;
        const winstonLogger = backendCommon.loggerToWinstonLogger(logger);
        const router$1 = await router.createRouter({
          logger: winstonLogger,
          config,
          database: disableStaticFallbackCache ? void 0 : database,
          appPackageName: appPackageName != null ? appPackageName : "app",
          staticFallbackHandler,
          disableConfigInjection
        });
        httpRouter.use(router$1);
      }
    });
  }
}));

exports.appPlugin = appPlugin;
//# sourceMappingURL=alpha.cjs.js.map
