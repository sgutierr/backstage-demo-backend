{"version":3,"file":"index.cjs.js","sources":["../src/config/ObservableConfigProxy.ts","../src/lib/urls.ts","../src/config/config.ts","../src/http/config.ts","../src/http/getGeneratedCertificate.ts","../src/http/createHttpServer.ts","../src/http/readHelmetOptions.ts","../src/http/readCorsOptions.ts","../src/http/MiddlewareFactory.ts","../src/lib/escapeRegExp.ts","../src/logging/WinstonLogger.ts","../src/services/implementations/rootLifecycle/rootLifecycleServiceFactory.ts","../src/wiring/BackendInitializer.ts","../src/wiring/ServiceRegistry.ts","../src/wiring/BackstageBackend.ts","../src/wiring/createSpecializedBackend.ts","../src/services/implementations/cache/cacheServiceFactory.ts","../src/services/implementations/config/configServiceFactory.ts","../src/services/implementations/database/databaseServiceFactory.ts","../src/services/implementations/discovery/discoveryServiceFactory.ts","../src/services/implementations/httpRouter/httpRouterServiceFactory.ts","../src/services/implementations/identity/identityServiceFactory.ts","../src/services/implementations/lifecycle/lifecycleServiceFactory.ts","../src/services/implementations/logger/loggerServiceFactory.ts","../src/services/implementations/permissions/permissionsServiceFactory.ts","../src/services/implementations/rootHttpRouter/DefaultRootHttpRouter.ts","../src/services/implementations/rootHttpRouter/rootHttpRouterServiceFactory.ts","../src/services/implementations/rootLogger/rootLoggerServiceFactory.ts","../src/services/implementations/scheduler/schedulerServiceFactory.ts","../src/services/implementations/tokenManager/tokenManagerServiceFactory.ts","../src/services/implementations/urlReader/urlReaderServiceFactory.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigService } from '@backstage/backend-plugin-api';\nimport { ConfigReader } from '@backstage/config';\nimport { JsonValue } from '@backstage/types';\n\nexport class ObservableConfigProxy implements ConfigService {\n  private config: ConfigService = new ConfigReader({});\n\n  private readonly subscribers: (() => void)[] = [];\n\n  constructor(\n    private readonly parent?: ObservableConfigProxy,\n    private parentKey?: string,\n  ) {\n    if (parent && !parentKey) {\n      throw new Error('parentKey is required if parent is set');\n    }\n  }\n\n  setConfig(config: ConfigService) {\n    if (this.parent) {\n      throw new Error('immutable');\n    }\n    this.config = config;\n    for (const subscriber of this.subscribers) {\n      try {\n        subscriber();\n      } catch (error) {\n        console.error(`Config subscriber threw error, ${error}`);\n      }\n    }\n  }\n\n  subscribe(onChange: () => void): { unsubscribe: () => void } {\n    if (this.parent) {\n      return this.parent.subscribe(onChange);\n    }\n\n    this.subscribers.push(onChange);\n    return {\n      unsubscribe: () => {\n        const index = this.subscribers.indexOf(onChange);\n        if (index >= 0) {\n          this.subscribers.splice(index, 1);\n        }\n      },\n    };\n  }\n\n  private select(required: true): ConfigService;\n  private select(required: false): ConfigService | undefined;\n  private select(required: boolean): ConfigService | undefined {\n    if (this.parent && this.parentKey) {\n      if (required) {\n        return this.parent.select(true).getConfig(this.parentKey);\n      }\n      return this.parent.select(false)?.getOptionalConfig(this.parentKey);\n    }\n\n    return this.config;\n  }\n\n  has(key: string): boolean {\n    return this.select(false)?.has(key) ?? false;\n  }\n  keys(): string[] {\n    return this.select(false)?.keys() ?? [];\n  }\n  get<T = JsonValue>(key?: string): T {\n    return this.select(true).get(key);\n  }\n  getOptional<T = JsonValue>(key?: string): T | undefined {\n    return this.select(false)?.getOptional(key);\n  }\n  getConfig(key: string): ConfigService {\n    return new ObservableConfigProxy(this, key);\n  }\n  getOptionalConfig(key: string): ConfigService | undefined {\n    if (this.select(false)?.has(key)) {\n      return new ObservableConfigProxy(this, key);\n    }\n    return undefined;\n  }\n  getConfigArray(key: string): ConfigService[] {\n    return this.select(true).getConfigArray(key);\n  }\n  getOptionalConfigArray(key: string): ConfigService[] | undefined {\n    return this.select(false)?.getOptionalConfigArray(key);\n  }\n  getNumber(key: string): number {\n    return this.select(true).getNumber(key);\n  }\n  getOptionalNumber(key: string): number | undefined {\n    return this.select(false)?.getOptionalNumber(key);\n  }\n  getBoolean(key: string): boolean {\n    return this.select(true).getBoolean(key);\n  }\n  getOptionalBoolean(key: string): boolean | undefined {\n    return this.select(false)?.getOptionalBoolean(key);\n  }\n  getString(key: string): string {\n    return this.select(true).getString(key);\n  }\n  getOptionalString(key: string): string | undefined {\n    return this.select(false)?.getOptionalString(key);\n  }\n  getStringArray(key: string): string[] {\n    return this.select(true).getStringArray(key);\n  }\n  getOptionalStringArray(key: string): string[] | undefined {\n    return this.select(false)?.getOptionalStringArray(key);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { resolve as resolvePath } from 'path';\nimport parseArgs from 'minimist';\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport { findPaths } from '@backstage/cli-common';\nimport {\n  loadConfigSchema,\n  loadConfig,\n  ConfigTarget,\n  LoadConfigOptionsRemote,\n} from '@backstage/config-loader';\nimport { ConfigReader } from '@backstage/config';\nimport type { Config, AppConfig } from '@backstage/config';\nimport { getPackages } from '@manypkg/get-packages';\nimport { ObservableConfigProxy } from './ObservableConfigProxy';\nimport { isValidUrl } from '../lib/urls';\n\n/** @public */\nexport async function createConfigSecretEnumerator(options: {\n  logger: LoggerService;\n  dir?: string;\n}): Promise<(config: Config) => Iterable<string>> {\n  const { logger, dir = process.cwd() } = options;\n  const { packages } = await getPackages(dir);\n  const schema = await loadConfigSchema({\n    dependencies: packages.map(p => p.packageJson.name),\n  });\n\n  return (config: Config) => {\n    const [secretsData] = schema.process(\n      [{ data: config.getOptional() ?? {}, context: 'schema-enumerator' }],\n      {\n        visibility: ['secret'],\n        ignoreSchemaErrors: true,\n      },\n    );\n    const secrets = new Set<string>();\n    JSON.parse(\n      JSON.stringify(secretsData),\n      (_, v) => typeof v === 'string' && secrets.add(v),\n    );\n    logger.info(\n      `Found ${secrets.size} new secrets in config that will be redacted`,\n    );\n    return secrets;\n  };\n}\n\n/**\n * Load configuration for a Backend.\n *\n * This function should only be called once, during the initialization of the backend.\n *\n * @public\n */\nexport async function loadBackendConfig(options: {\n  remote?: LoadConfigOptionsRemote;\n  argv: string[];\n  additionalConfigs?: AppConfig[];\n}): Promise<{ config: Config }> {\n  const args = parseArgs(options.argv);\n\n  const configTargets: ConfigTarget[] = [args.config ?? []]\n    .flat()\n    .map(arg => (isValidUrl(arg) ? { url: arg } : { path: resolvePath(arg) }));\n\n  /* eslint-disable-next-line no-restricted-syntax */\n  const paths = findPaths(__dirname);\n\n  let currentCancelFunc: (() => void) | undefined = undefined;\n\n  const config = new ObservableConfigProxy();\n  const { appConfigs } = await loadConfig({\n    configRoot: paths.targetRoot,\n    configTargets: configTargets,\n    remote: options.remote,\n    watch: {\n      onChange(newConfigs) {\n        console.info(\n          `Reloaded config from ${newConfigs.map(c => c.context).join(', ')}`,\n        );\n        const configsToMerge = [...newConfigs];\n        if (options.additionalConfigs) {\n          configsToMerge.push(...options.additionalConfigs);\n        }\n        config.setConfig(ConfigReader.fromConfigs(configsToMerge));\n      },\n      stopSignal: new Promise(resolve => {\n        if (currentCancelFunc) {\n          currentCancelFunc();\n        }\n        currentCancelFunc = resolve;\n\n        // TODO(Rugvip): We keep this here for now to avoid breaking the old system\n        //               since this is re-used in backend-common\n        if (module.hot) {\n          module.hot.addDisposeHandler(resolve);\n        }\n      }),\n    },\n  });\n  console.info(\n    `Loaded config from ${appConfigs.map(c => c.context).join(', ')}`,\n  );\n\n  const finalAppConfigs = [...appConfigs];\n  if (options.additionalConfigs) {\n    finalAppConfigs.push(...options.additionalConfigs);\n  }\n  config.setConfig(ConfigReader.fromConfigs(finalAppConfigs));\n\n  return { config };\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { HttpServerOptions } from './types';\n\nconst DEFAULT_PORT = 7007;\nconst DEFAULT_HOST = '';\n\n/**\n * Reads {@link HttpServerOptions} from a {@link @backstage/config#Config} object.\n *\n * @public\n * @remarks\n *\n * The provided configuration object should contain the `listen` and\n * additional keys directly.\n *\n * @example\n * ```ts\n * const opts = readHttpServerOptions(config.getConfig('backend'));\n * ```\n */\nexport function readHttpServerOptions(config?: Config): HttpServerOptions {\n  return {\n    listen: readHttpListenOptions(config),\n    https: readHttpsOptions(config),\n  };\n}\n\nfunction readHttpListenOptions(config?: Config): HttpServerOptions['listen'] {\n  const listen = config?.getOptional('listen');\n  if (typeof listen === 'string') {\n    const parts = String(listen).split(':');\n    const port = parseInt(parts[parts.length - 1], 10);\n    if (!isNaN(port)) {\n      if (parts.length === 1) {\n        return { port, host: DEFAULT_HOST };\n      }\n      if (parts.length === 2) {\n        return { host: parts[0], port };\n      }\n    }\n    throw new Error(\n      `Unable to parse listen address ${listen}, expected <port> or <host>:<port>`,\n    );\n  }\n\n  // Workaround to allow empty string\n  const host = config?.getOptional('listen.host') ?? DEFAULT_HOST;\n  if (typeof host !== 'string') {\n    config?.getOptionalString('listen.host'); // will throw\n    throw new Error('unreachable');\n  }\n\n  return {\n    port: config?.getOptionalNumber('listen.port') ?? DEFAULT_PORT,\n    host,\n  };\n}\n\nfunction readHttpsOptions(config?: Config): HttpServerOptions['https'] {\n  const https = config?.getOptional('https');\n  if (https === true) {\n    const baseUrl = config!.getString('baseUrl');\n    let hostname;\n    try {\n      hostname = new URL(baseUrl).hostname;\n    } catch (error) {\n      throw new Error(`Invalid baseUrl \"${baseUrl}\"`);\n    }\n\n    return { certificate: { type: 'generated', hostname } };\n  }\n\n  const cc = config?.getOptionalConfig('https');\n  if (!cc) {\n    return undefined;\n  }\n\n  return {\n    certificate: {\n      type: 'pem',\n      cert: cc.getString('certificate.cert'),\n      key: cc.getString('certificate.key'),\n    },\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { resolve as resolvePath, dirname } from 'path';\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport forge from 'node-forge';\n\nconst FIVE_DAYS_IN_MS = 5 * 24 * 60 * 60 * 1000;\n\nconst IP_HOSTNAME_REGEX = /:|^\\d+\\.\\d+\\.\\d+\\.\\d+$/;\n\nexport async function getGeneratedCertificate(\n  hostname: string,\n  logger: LoggerService,\n) {\n  const hasModules = await fs.pathExists('node_modules');\n  let certPath;\n  if (hasModules) {\n    certPath = resolvePath(\n      'node_modules/.cache/backstage-backend/dev-cert.pem',\n    );\n    await fs.ensureDir(dirname(certPath));\n  } else {\n    certPath = resolvePath('.dev-cert.pem');\n  }\n\n  if (await fs.pathExists(certPath)) {\n    try {\n      const cert = await fs.readFile(certPath);\n\n      const crt = forge.pki.certificateFromPem(cert.toString());\n      const remainingMs = crt.validity.notAfter.getTime() - Date.now();\n      if (remainingMs > FIVE_DAYS_IN_MS) {\n        logger.info('Using existing self-signed certificate');\n        return {\n          key: cert,\n          cert,\n        };\n      }\n    } catch (error) {\n      logger.warn(`Unable to use existing self-signed certificate, ${error}`);\n    }\n  }\n\n  logger.info('Generating new self-signed certificate');\n  const newCert = await generateCertificate(hostname);\n  await fs.writeFile(certPath, newCert.cert + newCert.key, 'utf8');\n  return newCert;\n}\n\nasync function generateCertificate(hostname: string) {\n  const attributes = [\n    {\n      name: 'commonName',\n      value: 'dev-cert',\n    },\n  ];\n\n  const sans = [\n    {\n      type: 2, // DNS\n      value: 'localhost',\n    },\n    {\n      type: 2,\n      value: 'localhost.localdomain',\n    },\n    {\n      type: 2,\n      value: '[::1]',\n    },\n    {\n      type: 7, // IP\n      ip: '127.0.0.1',\n    },\n    {\n      type: 7,\n      ip: 'fe80::1',\n    },\n  ];\n\n  // Add hostname from backend.baseUrl if it doesn't already exist in our list of SANs\n  if (!sans.find(({ value, ip }) => value === hostname || ip === hostname)) {\n    sans.push(\n      IP_HOSTNAME_REGEX.test(hostname)\n        ? {\n            type: 7,\n            ip: hostname,\n          }\n        : {\n            type: 2,\n            value: hostname,\n          },\n    );\n  }\n\n  const params = {\n    algorithm: 'sha256',\n    keySize: 2048,\n    days: 30,\n    extensions: [\n      {\n        name: 'keyUsage',\n        keyCertSign: true,\n        digitalSignature: true,\n        nonRepudiation: true,\n        keyEncipherment: true,\n        dataEncipherment: true,\n      },\n      {\n        name: 'extKeyUsage',\n        serverAuth: true,\n        clientAuth: true,\n        codeSigning: true,\n        timeStamping: true,\n      },\n      {\n        name: 'subjectAltName',\n        altNames: sans,\n      },\n    ],\n  };\n\n  return new Promise<{ key: string; cert: string }>((resolve, reject) =>\n    require('selfsigned').generate(\n      attributes,\n      params,\n      (err: Error, bundle: { private: string; cert: string }) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve({ key: bundle.private, cert: bundle.cert });\n        }\n      },\n    ),\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport stoppableServer from 'stoppable';\nimport { RequestListener } from 'http';\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport { HttpServerOptions, ExtendedHttpServer } from './types';\nimport { getGeneratedCertificate } from './getGeneratedCertificate';\n\n/**\n * Creates a Node.js HTTP or HTTPS server instance.\n *\n * @public\n */\nexport async function createHttpServer(\n  listener: RequestListener,\n  options: HttpServerOptions,\n  deps: { logger: LoggerService },\n): Promise<ExtendedHttpServer> {\n  const server = await createServer(listener, options, deps);\n\n  const stopper = stoppableServer(server, 0);\n  // The stopper here is actually the server itself, so if we try\n  // to call stopper.stop() down in the stop implementation, we'll\n  // be calling ourselves.\n  const stopServer = stopper.stop.bind(stopper);\n\n  return Object.assign(server, {\n    start() {\n      return new Promise<void>((resolve, reject) => {\n        const handleStartupError = (error: Error) => {\n          server.close();\n          reject(error);\n        };\n\n        server.on('error', handleStartupError);\n\n        const { host, port } = options.listen;\n        server.listen(port, host, () => {\n          server.off('error', handleStartupError);\n          deps.logger.info(`Listening on ${host}:${port}`);\n          resolve();\n        });\n      });\n    },\n\n    stop() {\n      return new Promise<void>((resolve, reject) => {\n        stopServer((error?: Error) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    port() {\n      const address = server.address();\n      if (typeof address === 'string' || address === null) {\n        throw new Error(`Unexpected server address '${address}'`);\n      }\n      return address.port;\n    },\n  });\n}\n\nasync function createServer(\n  listener: RequestListener,\n  options: HttpServerOptions,\n  deps: { logger: LoggerService },\n): Promise<http.Server> {\n  if (options.https) {\n    const { certificate } = options.https;\n    if (certificate.type === 'generated') {\n      const credentials = await getGeneratedCertificate(\n        certificate.hostname,\n        deps.logger,\n      );\n      return https.createServer(credentials, listener);\n    }\n    return https.createServer(certificate, listener);\n  }\n\n  return http.createServer(listener);\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport helmet from 'helmet';\nimport { HelmetOptions } from 'helmet';\nimport { ContentSecurityPolicyOptions } from 'helmet/dist/types/middlewares/content-security-policy';\n\n/**\n * Attempts to read Helmet options from the backend configuration object.\n *\n * @public\n * @param config - The backend configuration object.\n * @returns A Helmet options object, or undefined if no Helmet configuration is present.\n *\n * @example\n * ```ts\n * const helmetOptions = readHelmetOptions(config.getConfig('backend'));\n * ```\n */\nexport function readHelmetOptions(config?: Config): HelmetOptions {\n  const cspOptions = readCspDirectives(config);\n  return {\n    contentSecurityPolicy: {\n      useDefaults: false,\n      directives: applyCspDirectives(cspOptions),\n    },\n    // These are all disabled in order to maintain backwards compatibility\n    // when bumping helmet v5. We can't enable these by default because\n    // there is no way for users to configure them.\n    // TODO(Rugvip): We should give control of this setup to consumers\n    crossOriginEmbedderPolicy: false,\n    crossOriginOpenerPolicy: false,\n    crossOriginResourcePolicy: false,\n    originAgentCluster: false,\n  };\n}\n\ntype CspDirectives = Record<string, string[] | false> | undefined;\n\n/**\n * Attempts to read a CSP directives from the backend configuration object.\n *\n * @example\n * ```yaml\n * backend:\n *   csp:\n *     connect-src: [\"'self'\", 'http:', 'https:']\n *     upgrade-insecure-requests: false\n * ```\n */\nfunction readCspDirectives(config?: Config): CspDirectives {\n  const cc = config?.getOptionalConfig('csp');\n  if (!cc) {\n    return undefined;\n  }\n\n  const result: Record<string, string[] | false> = {};\n  for (const key of cc.keys()) {\n    if (cc.get(key) === false) {\n      result[key] = false;\n    } else {\n      result[key] = cc.getStringArray(key);\n    }\n  }\n\n  return result;\n}\n\nexport function applyCspDirectives(\n  directives: CspDirectives,\n): ContentSecurityPolicyOptions['directives'] {\n  const result: ContentSecurityPolicyOptions['directives'] =\n    helmet.contentSecurityPolicy.getDefaultDirectives();\n\n  // TODO(Rugvip): We currently use non-precompiled AJV for validation in the frontend, which uses eval.\n  //               It should be replaced by any other solution that doesn't require unsafe-eval.\n  result['script-src'] = [\"'self'\", \"'unsafe-eval'\"];\n\n  // TODO(Rugvip): This is removed so that we maintained backwards compatibility\n  //               when bumping to helmet v5, we could remove this as well as\n  //               skip setting `useDefaults: false` in the future.\n  delete result['form-action'];\n\n  if (directives) {\n    for (const [key, value] of Object.entries(directives)) {\n      if (value === false) {\n        delete result[key];\n      } else {\n        result[key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { CorsOptions } from 'cors';\nimport { Minimatch } from 'minimatch';\n\n/**\n * Attempts to read a CORS options object from the backend configuration object.\n *\n * @public\n * @param config - The backend configuration object.\n * @returns A CORS options object, or undefined if no cors configuration is present.\n *\n * @example\n * ```ts\n * const corsOptions = readCorsOptions(config.getConfig('backend'));\n * ```\n */\nexport function readCorsOptions(config?: Config): CorsOptions {\n  const cc = config?.getOptionalConfig('cors');\n  if (!cc) {\n    return { origin: false }; // Disable CORS\n  }\n\n  return removeUnknown({\n    origin: createCorsOriginMatcher(readStringArray(cc, 'origin')),\n    methods: readStringArray(cc, 'methods'),\n    allowedHeaders: readStringArray(cc, 'allowedHeaders'),\n    exposedHeaders: readStringArray(cc, 'exposedHeaders'),\n    credentials: cc.getOptionalBoolean('credentials'),\n    maxAge: cc.getOptionalNumber('maxAge'),\n    preflightContinue: cc.getOptionalBoolean('preflightContinue'),\n    optionsSuccessStatus: cc.getOptionalNumber('optionsSuccessStatus'),\n  });\n}\n\nfunction removeUnknown<T extends object>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([, v]) => v !== undefined),\n  ) as T;\n}\n\nfunction readStringArray(config: Config, key: string): string[] | undefined {\n  const value = config.getOptional(key);\n  if (typeof value === 'string') {\n    return [value];\n  } else if (!value) {\n    return undefined;\n  }\n  return config.getStringArray(key);\n}\n\nfunction createCorsOriginMatcher(allowedOriginPatterns: string[] | undefined) {\n  if (!allowedOriginPatterns) {\n    return undefined;\n  }\n\n  const allowedOriginMatchers = allowedOriginPatterns.map(\n    pattern => new Minimatch(pattern, { nocase: true, noglobstar: true }),\n  );\n\n  return (\n    origin: string | undefined,\n    callback: (\n      err: Error | null,\n      origin: boolean | string | RegExp | (boolean | string | RegExp)[],\n    ) => void,\n  ) => {\n    return callback(\n      null,\n      allowedOriginMatchers.some(pattern => pattern.match(origin ?? '')),\n    );\n  };\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigService, LoggerService } from '@backstage/backend-plugin-api';\nimport {\n  Request,\n  Response,\n  ErrorRequestHandler,\n  NextFunction,\n  RequestHandler,\n} from 'express';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\nimport compression from 'compression';\nimport { readHelmetOptions } from './readHelmetOptions';\nimport { readCorsOptions } from './readCorsOptions';\nimport {\n  AuthenticationError,\n  ConflictError,\n  ErrorResponseBody,\n  InputError,\n  NotAllowedError,\n  NotFoundError,\n  NotModifiedError,\n  serializeError,\n} from '@backstage/errors';\nimport { NotImplementedError } from '@backstage/errors';\n\n/**\n * Options used to create a {@link MiddlewareFactory}.\n *\n * @public\n */\nexport interface MiddlewareFactoryOptions {\n  config: ConfigService;\n  logger: LoggerService;\n}\n\n/**\n * Options passed to the {@link MiddlewareFactory.error} middleware.\n *\n * @public\n */\nexport interface MiddlewareFactoryErrorOptions {\n  /**\n   * Whether error response bodies should show error stack traces or not.\n   *\n   * If not specified, by default shows stack traces only in development mode.\n   */\n  showStackTraces?: boolean;\n\n  /**\n   * Whether any 4xx errors should be logged or not.\n   *\n   * If not specified, default to only logging 5xx errors.\n   */\n  logAllErrors?: boolean;\n}\n\n/**\n * A utility to configure common middleware.\n *\n * @public\n */\nexport class MiddlewareFactory {\n  #config: ConfigService;\n  #logger: LoggerService;\n\n  /**\n   * Creates a new {@link MiddlewareFactory}.\n   */\n  static create(options: MiddlewareFactoryOptions) {\n    return new MiddlewareFactory(options);\n  }\n\n  private constructor(options: MiddlewareFactoryOptions) {\n    this.#config = options.config;\n    this.#logger = options.logger;\n  }\n\n  /**\n   * Returns a middleware that unconditionally produces a 404 error response.\n   *\n   * @remarks\n   *\n   * Typically you want to place this middleware at the end of the chain, such\n   * that it's the last one attempted after no other routes matched.\n   *\n   * @returns An Express request handler\n   */\n  notFound(): RequestHandler {\n    return (_req: Request, res: Response) => {\n      res.status(404).end();\n    };\n  }\n\n  /**\n   * Returns the compression middleware.\n   *\n   * @remarks\n   *\n   * The middleware will attempt to compress response bodies for all requests\n   * that traverse through the middleware.\n   */\n  compression(): RequestHandler {\n    return compression();\n  }\n\n  /**\n   * Returns a request logging middleware.\n   *\n   * @remarks\n   *\n   * Typically you want to place this middleware at the start of the chain, such\n   * that it always logs requests whether they are \"caught\" by handlers farther\n   * down or not.\n   *\n   * @returns An Express request handler\n   */\n  logging(): RequestHandler {\n    const logger = this.#logger.child({\n      type: 'incomingRequest',\n    });\n\n    return morgan('combined', {\n      stream: {\n        write(message: string) {\n          logger.info(message.trimEnd());\n        },\n      },\n    });\n  }\n\n  /**\n   * Returns a middleware that implements the helmet library.\n   *\n   * @remarks\n   *\n   * This middleware applies security policies to incoming requests and outgoing\n   * responses. It is configured using config keys such as `backend.csp`.\n   *\n   * @see {@link https://helmetjs.github.io/}\n   *\n   * @returns An Express request handler\n   */\n  helmet(): RequestHandler {\n    return helmet(readHelmetOptions(this.#config.getOptionalConfig('backend')));\n  }\n\n  /**\n   * Returns a middleware that implements the cors library.\n   *\n   * @remarks\n   *\n   * This middleware handles CORS. It is configured using the config key\n   * `backend.cors`.\n   *\n   * @see {@link https://github.com/expressjs/cors}\n   *\n   * @returns An Express request handler\n   */\n  cors(): RequestHandler {\n    return cors(readCorsOptions(this.#config.getOptionalConfig('backend')));\n  }\n\n  /**\n   * Express middleware to handle errors during request processing.\n   *\n   * @remarks\n   *\n   * This is commonly the very last middleware in the chain.\n   *\n   * Its primary purpose is not to do translation of business logic exceptions,\n   * but rather to be a global catch-all for uncaught \"fatal\" errors that are\n   * expected to result in a 500 error. However, it also does handle some common\n   * error types (such as http-error exceptions, and the well-known error types\n   * in the `@backstage/errors` package) and returns the enclosed status code\n   * accordingly.\n   *\n   * It will also produce a response body with a serialized form of the error,\n   * unless a previous handler already did send a body. See\n   * {@link @backstage/errors#ErrorResponseBody} for the response shape used.\n   *\n   * @returns An Express error request handler\n   */\n  error(options: MiddlewareFactoryErrorOptions = {}): ErrorRequestHandler {\n    const showStackTraces =\n      options.showStackTraces ?? process.env.NODE_ENV === 'development';\n\n    const logger = this.#logger.child({\n      type: 'errorHandler',\n    });\n\n    return (error: Error, req: Request, res: Response, next: NextFunction) => {\n      const statusCode = getStatusCode(error);\n      if (options.logAllErrors || statusCode >= 500) {\n        logger.error(`Request failed with status ${statusCode}`, error);\n      }\n\n      if (res.headersSent) {\n        // If the headers have already been sent, do not send the response again\n        // as this will throw an error in the backend.\n        next(error);\n        return;\n      }\n\n      const body: ErrorResponseBody = {\n        error: serializeError(error, { includeStack: showStackTraces }),\n        request: { method: req.method, url: req.url },\n        response: { statusCode },\n      };\n\n      res.status(statusCode).json(body);\n    };\n  }\n}\n\nfunction getStatusCode(error: Error): number {\n  // Look for common http library status codes\n  const knownStatusCodeFields = ['statusCode', 'status'];\n  for (const field of knownStatusCodeFields) {\n    const statusCode = (error as any)[field];\n    if (\n      typeof statusCode === 'number' &&\n      (statusCode | 0) === statusCode && // is whole integer\n      statusCode >= 100 &&\n      statusCode <= 599\n    ) {\n      return statusCode;\n    }\n  }\n\n  // Handle well-known error types\n  switch (error.name) {\n    case NotModifiedError.name:\n      return 304;\n    case InputError.name:\n      return 400;\n    case AuthenticationError.name:\n      return 401;\n    case NotAllowedError.name:\n      return 403;\n    case NotFoundError.name:\n      return 404;\n    case ConflictError.name:\n      return 409;\n    case NotImplementedError.name:\n      return 501;\n    default:\n      break;\n  }\n\n  // Fall back to internal server error\n  return 500;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Escapes a given string to be used inside a RegExp.\n *\n * Taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n */\nexport const escapeRegExp = (text: string) => {\n  return text.replace(/[.*+?^${}(\\)|[\\]\\\\]/g, '\\\\$&');\n};\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LoggerService,\n  RootLoggerService,\n} from '@backstage/backend-plugin-api';\nimport { JsonObject } from '@backstage/types';\nimport { Format, TransformableInfo } from 'logform';\nimport {\n  Logger,\n  format,\n  createLogger,\n  transports,\n  transport as Transport,\n} from 'winston';\nimport { escapeRegExp } from '../lib/escapeRegExp';\n\n/**\n * @public\n */\nexport interface WinstonLoggerOptions {\n  meta?: JsonObject;\n  level: string;\n  format: Format;\n  transports: Transport[];\n}\n\n/**\n * A {@link @backstage/backend-plugin-api#LoggerService} implementation based on winston.\n *\n * @public\n */\nexport class WinstonLogger implements RootLoggerService {\n  #winston: Logger;\n  #addRedactions?: (redactions: Iterable<string>) => void;\n\n  /**\n   * Creates a {@link WinstonLogger} instance.\n   */\n  static create(options: WinstonLoggerOptions): WinstonLogger {\n    const redacter = WinstonLogger.redacter();\n\n    let logger = createLogger({\n      level: options.level,\n      format: format.combine(redacter.format, options.format),\n      transports: options.transports ?? new transports.Console(),\n    });\n    if (options.meta) {\n      logger = logger.child(options.meta);\n    }\n\n    return new WinstonLogger(logger, redacter.add);\n  }\n\n  /**\n   * Creates a winston log formatter for redacting secrets.\n   */\n  static redacter(): {\n    format: Format;\n    add: (redactions: Iterable<string>) => void;\n  } {\n    const redactionSet = new Set<string>();\n\n    let redactionPattern: RegExp | undefined = undefined;\n\n    return {\n      format: format(info => {\n        if (redactionPattern && typeof info.message === 'string') {\n          info.message = info.message.replace(redactionPattern, '[REDACTED]');\n        }\n        return info;\n      })(),\n      add(newRedactions) {\n        let added = 0;\n        for (const redaction of newRedactions) {\n          // Exclude secrets that are empty or just one character in length. These\n          // typically mean that you are running local dev or tests, or using the\n          // --lax flag which sets things to just 'x'.\n          if (redaction.length <= 1) {\n            continue;\n          }\n          if (!redactionSet.has(redaction)) {\n            redactionSet.add(redaction);\n            added += 1;\n          }\n        }\n        if (added > 0) {\n          const redactions = Array.from(redactionSet)\n            .map(r => escapeRegExp(r))\n            .join('|');\n          redactionPattern = new RegExp(`(${redactions})`, 'g');\n        }\n      },\n    };\n  }\n\n  /**\n   * Creates a pretty printed winston log formatter.\n   */\n  static colorFormat(): Format {\n    const colorizer = format.colorize();\n\n    return format.combine(\n      format.timestamp(),\n      format.colorize({\n        colors: {\n          timestamp: 'dim',\n          prefix: 'blue',\n          field: 'cyan',\n          debug: 'grey',\n        },\n      }),\n      format.printf((info: TransformableInfo) => {\n        const { timestamp, level, message, plugin, service, ...fields } = info;\n        const prefix = plugin || service;\n        const timestampColor = colorizer.colorize('timestamp', timestamp);\n        const prefixColor = colorizer.colorize('prefix', prefix);\n\n        const extraFields = Object.entries(fields)\n          .map(\n            ([key, value]) =>\n              `${colorizer.colorize('field', `${key}`)}=${value}`,\n          )\n          .join(' ');\n\n        return `${timestampColor} ${prefixColor} ${level} ${message} ${extraFields}`;\n      }),\n    );\n  }\n\n  private constructor(\n    winston: Logger,\n    addRedactions?: (redactions: Iterable<string>) => void,\n  ) {\n    this.#winston = winston;\n    this.#addRedactions = addRedactions;\n  }\n\n  error(message: string, meta?: JsonObject): void {\n    this.#winston.error(message, meta);\n  }\n\n  warn(message: string, meta?: JsonObject): void {\n    this.#winston.warn(message, meta);\n  }\n\n  info(message: string, meta?: JsonObject): void {\n    this.#winston.info(message, meta);\n  }\n\n  debug(message: string, meta?: JsonObject): void {\n    this.#winston.debug(message, meta);\n  }\n\n  child(meta: JsonObject): LoggerService {\n    return new WinstonLogger(this.#winston.child(meta));\n  }\n\n  addRedactions(redactions: Iterable<string>) {\n    this.#addRedactions?.(redactions);\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createServiceFactory,\n  coreServices,\n  LifecycleServiceShutdownHook,\n  LifecycleServiceShutdownOptions,\n  RootLifecycleService,\n  LoggerService,\n} from '@backstage/backend-plugin-api';\n\nexport class BackendLifecycleImpl implements RootLifecycleService {\n  constructor(private readonly logger: LoggerService) {}\n\n  #isCalled = false;\n  #shutdownTasks: Array<{\n    hook: LifecycleServiceShutdownHook;\n    options?: LifecycleServiceShutdownOptions;\n  }> = [];\n\n  addShutdownHook(\n    hook: LifecycleServiceShutdownHook,\n    options?: LifecycleServiceShutdownOptions,\n  ): void {\n    this.#shutdownTasks.push({ hook, options });\n  }\n\n  async shutdown(): Promise<void> {\n    if (this.#isCalled) {\n      return;\n    }\n    this.#isCalled = true;\n\n    this.logger.info(`Running ${this.#shutdownTasks.length} shutdown tasks...`);\n    await Promise.all(\n      this.#shutdownTasks.map(async ({ hook, options }) => {\n        const logger = options?.logger ?? this.logger;\n        try {\n          await hook();\n          logger.info(`Shutdown hook succeeded`);\n        } catch (error) {\n          logger.error(`Shutdown hook failed, ${error}`);\n        }\n      }),\n    );\n  }\n}\n\n/**\n * Allows plugins to register shutdown hooks that are run when the process is about to exit.\n *\n * @public\n */\nexport const rootLifecycleServiceFactory = createServiceFactory({\n  service: coreServices.rootLifecycle,\n  deps: {\n    logger: coreServices.rootLogger,\n  },\n  async factory({ logger }) {\n    return new BackendLifecycleImpl(logger);\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BackendFeature,\n  ExtensionPoint,\n  coreServices,\n  ServiceRef,\n} from '@backstage/backend-plugin-api';\nimport { BackendLifecycleImpl } from '../services/implementations/rootLifecycle/rootLifecycleServiceFactory';\nimport {\n  BackendRegisterInit,\n  EnumerableServiceHolder,\n  ServiceOrExtensionPoint,\n} from './types';\n// Direct internal import to avoid duplication\n// eslint-disable-next-line @backstage/no-forbidden-package-imports\nimport { InternalBackendFeature } from '@backstage/backend-plugin-api/src/wiring/types';\n\nexport class BackendInitializer {\n  #startPromise?: Promise<void>;\n  #features = new Array<InternalBackendFeature>();\n  #registerInits = new Array<BackendRegisterInit>();\n  #extensionPoints = new Map<ExtensionPoint<unknown>, unknown>();\n  #serviceHolder: EnumerableServiceHolder;\n\n  constructor(serviceHolder: EnumerableServiceHolder) {\n    this.#serviceHolder = serviceHolder;\n  }\n\n  async #getInitDeps(\n    deps: { [name: string]: ServiceOrExtensionPoint },\n    pluginId: string,\n  ) {\n    const result = new Map<string, unknown>();\n    const missingRefs = new Set<ServiceOrExtensionPoint>();\n\n    for (const [name, ref] of Object.entries(deps)) {\n      const extensionPoint = this.#extensionPoints.get(\n        ref as ExtensionPoint<unknown>,\n      );\n      if (extensionPoint) {\n        result.set(name, extensionPoint);\n      } else {\n        const impl = await this.#serviceHolder.get(\n          ref as ServiceRef<unknown>,\n          pluginId,\n        );\n        if (impl) {\n          result.set(name, impl);\n        } else {\n          missingRefs.add(ref);\n        }\n      }\n    }\n\n    if (missingRefs.size > 0) {\n      const missing = Array.from(missingRefs).join(', ');\n      throw new Error(\n        `No extension point or service available for the following ref(s): ${missing}`,\n      );\n    }\n\n    return Object.fromEntries(result);\n  }\n\n  add(feature: BackendFeature) {\n    if (this.#startPromise) {\n      throw new Error('feature can not be added after the backend has started');\n    }\n    if (feature.$$type !== '@backstage/BackendFeature') {\n      throw new Error(\n        `Failed to add feature, invalid type '${feature.$$type}'`,\n      );\n    }\n    const internalFeature = feature as InternalBackendFeature;\n    if (internalFeature.version !== 'v1') {\n      throw new Error(\n        `Failed to add feature, invalid version '${internalFeature.version}'`,\n      );\n    }\n    this.#features.push(internalFeature);\n  }\n\n  async start(): Promise<void> {\n    if (this.#startPromise) {\n      throw new Error('Backend has already started');\n    }\n\n    const exitHandler = async () => {\n      process.removeListener('SIGTERM', exitHandler);\n      process.removeListener('SIGINT', exitHandler);\n      process.removeListener('beforeExit', exitHandler);\n\n      try {\n        await this.stop();\n        process.exit(0);\n      } catch (error) {\n        console.error(error);\n        process.exit(1);\n      }\n    };\n\n    process.addListener('SIGTERM', exitHandler);\n    process.addListener('SIGINT', exitHandler);\n    process.addListener('beforeExit', exitHandler);\n\n    this.#startPromise = this.#doStart();\n    await this.#startPromise;\n  }\n\n  async #doStart(): Promise<void> {\n    // Initialize all root scoped services\n    for (const ref of this.#serviceHolder.getServiceRefs()) {\n      if (ref.scope === 'root') {\n        await this.#serviceHolder.get(ref, 'root');\n      }\n    }\n\n    // Initialize all features\n    for (const feature of this.#features) {\n      for (const r of feature.getRegistrations()) {\n        const provides = new Set<ExtensionPoint<unknown>>();\n\n        if (r.type === 'plugin') {\n          for (const [extRef, extImpl] of r.extensionPoints) {\n            if (this.#extensionPoints.has(extRef)) {\n              throw new Error(\n                `ExtensionPoint with ID '${extRef.id}' is already registered`,\n              );\n            }\n            this.#extensionPoints.set(extRef, extImpl);\n            provides.add(extRef);\n          }\n        }\n\n        this.#registerInits.push({\n          id: r.type === 'plugin' ? r.pluginId : `${r.pluginId}.${r.moduleId}`,\n          provides,\n          consumes: new Set(Object.values(r.init.deps)),\n          init: r.init,\n        });\n      }\n    }\n\n    const orderedRegisterResults = this.#resolveInitOrder(this.#registerInits);\n\n    for (const registerInit of orderedRegisterResults) {\n      const deps = await this.#getInitDeps(\n        registerInit.init.deps,\n        registerInit.id,\n      );\n      await registerInit.init.func(deps);\n    }\n\n    // Once the backend is started, any uncaught errors or unhandled rejections are caught\n    // and logged, in order to avoid crashing the entire backend on local failures.\n    if (process.env.NODE_ENV !== 'test') {\n      const rootLogger = await this.#serviceHolder.get(\n        coreServices.rootLogger,\n        'root',\n      );\n      process.on('unhandledRejection', (reason: Error) => {\n        rootLogger\n          ?.child({ type: 'unhandledRejection' })\n          ?.error('Unhandled rejection', reason);\n      });\n      process.on('uncaughtException', error => {\n        rootLogger\n          ?.child({ type: 'uncaughtException' })\n          ?.error('Uncaught exception', error);\n      });\n    }\n  }\n\n  #resolveInitOrder(registerInits: Array<BackendRegisterInit>) {\n    let registerInitsToOrder = registerInits.slice();\n    const orderedRegisterInits = new Array<BackendRegisterInit>();\n\n    // TODO: Validate duplicates\n\n    while (registerInitsToOrder.length > 0) {\n      const toRemove = new Set<unknown>();\n\n      for (const registerInit of registerInitsToOrder) {\n        const unInitializedDependents = [];\n\n        for (const provided of registerInit.provides) {\n          if (\n            registerInitsToOrder.some(\n              init => init !== registerInit && init.consumes.has(provided),\n            )\n          ) {\n            unInitializedDependents.push(provided);\n          }\n        }\n\n        if (unInitializedDependents.length === 0) {\n          orderedRegisterInits.push(registerInit);\n          toRemove.add(registerInit);\n        }\n      }\n\n      registerInitsToOrder = registerInitsToOrder.filter(r => !toRemove.has(r));\n    }\n\n    return orderedRegisterInits;\n  }\n\n  async stop(): Promise<void> {\n    if (!this.#startPromise) {\n      return;\n    }\n    await this.#startPromise;\n\n    const lifecycleService = await this.#serviceHolder.get(\n      coreServices.rootLifecycle,\n      'root',\n    );\n\n    // TODO(Rugvip): Find a better way to do this\n    if (lifecycleService instanceof BackendLifecycleImpl) {\n      await lifecycleService.shutdown();\n    } else {\n      throw new Error('Unexpected lifecycle service implementation');\n    }\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ServiceFactory,\n  ServiceRef,\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport { stringifyError } from '@backstage/errors';\nimport { EnumerableServiceHolder } from './types';\n// Direct internal import to avoid duplication\n// eslint-disable-next-line @backstage/no-forbidden-package-imports\nimport { InternalServiceFactory } from '@backstage/backend-plugin-api/src/services/system/types';\n/**\n * Keep in sync with `@backstage/backend-plugin-api/src/services/system/types.ts`\n * @internal\n */\nexport type InternalServiceRef = ServiceRef<unknown> & {\n  __defaultFactory?: (\n    service: ServiceRef<unknown>,\n  ) => Promise<ServiceFactory | (() => ServiceFactory)>;\n};\n\nfunction toInternalServiceFactory<TService, TScope extends 'plugin' | 'root'>(\n  factory: ServiceFactory<TService, TScope>,\n): InternalServiceFactory<TService, TScope> {\n  const f = factory as InternalServiceFactory<TService, TScope>;\n  if (f.$$type !== '@backstage/ServiceFactory') {\n    throw new Error(`Invalid service factory, bad type '${f.$$type}'`);\n  }\n  if (f.version !== 'v1') {\n    throw new Error(`Invalid service factory, bad version '${f.version}'`);\n  }\n  return f;\n}\n\nconst pluginMetadataServiceFactory = createServiceFactory(\n  (options: { pluginId: string }) => ({\n    service: coreServices.pluginMetadata,\n    deps: {},\n    factory: async () => ({ getId: () => options.pluginId }),\n  }),\n);\n\nexport class ServiceRegistry implements EnumerableServiceHolder {\n  readonly #providedFactories: Map<string, InternalServiceFactory>;\n  readonly #loadedDefaultFactories: Map<\n    Function,\n    Promise<InternalServiceFactory>\n  >;\n  readonly #implementations: Map<\n    InternalServiceFactory,\n    {\n      context: Promise<unknown>;\n      byPlugin: Map<string, Promise<unknown>>;\n    }\n  >;\n  readonly #rootServiceImplementations = new Map<\n    InternalServiceFactory,\n    Promise<unknown>\n  >();\n\n  constructor(factories: Array<ServiceFactory>) {\n    this.#providedFactories = new Map(\n      factories.map(sf => [sf.service.id, toInternalServiceFactory(sf)]),\n    );\n    this.#loadedDefaultFactories = new Map();\n    this.#implementations = new Map();\n  }\n\n  #resolveFactory(\n    ref: ServiceRef<unknown>,\n    pluginId: string,\n  ): Promise<InternalServiceFactory> | undefined {\n    // Special case handling of the plugin metadata service, generating a custom factory for it each time\n    if (ref.id === coreServices.pluginMetadata.id) {\n      return Promise.resolve(\n        toInternalServiceFactory(pluginMetadataServiceFactory({ pluginId })),\n      );\n    }\n\n    let resolvedFactory:\n      | Promise<InternalServiceFactory>\n      | InternalServiceFactory\n      | undefined = this.#providedFactories.get(ref.id);\n    const { __defaultFactory: defaultFactory } = ref as InternalServiceRef;\n    if (!resolvedFactory && !defaultFactory) {\n      return undefined;\n    }\n\n    if (!resolvedFactory) {\n      let loadedFactory = this.#loadedDefaultFactories.get(defaultFactory!);\n      if (!loadedFactory) {\n        loadedFactory = Promise.resolve()\n          .then(() => defaultFactory!(ref))\n          .then(f =>\n            toInternalServiceFactory(typeof f === 'function' ? f() : f),\n          );\n        this.#loadedDefaultFactories.set(defaultFactory!, loadedFactory);\n      }\n      resolvedFactory = loadedFactory.catch(error => {\n        throw new Error(\n          `Failed to instantiate service '${\n            ref.id\n          }' because the default factory loader threw an error, ${stringifyError(\n            error,\n          )}`,\n        );\n      });\n    }\n\n    return Promise.resolve(resolvedFactory);\n  }\n\n  #checkForMissingDeps(factory: InternalServiceFactory, pluginId: string) {\n    const missingDeps = Object.values(factory.deps).filter(ref => {\n      if (ref.id === coreServices.pluginMetadata.id) {\n        return false;\n      }\n      if (this.#providedFactories.get(ref.id)) {\n        return false;\n      }\n\n      return !(ref as InternalServiceRef).__defaultFactory;\n    });\n\n    if (missingDeps.length) {\n      const missing = missingDeps.map(r => `'${r.id}'`).join(', ');\n      throw new Error(\n        `Failed to instantiate service '${factory.service.id}' for '${pluginId}' because the following dependent services are missing: ${missing}`,\n      );\n    }\n  }\n\n  getServiceRefs(): ServiceRef<unknown>[] {\n    return Array.from(this.#providedFactories.values()).map(f => f.service);\n  }\n\n  get<T>(ref: ServiceRef<T>, pluginId: string): Promise<T> | undefined {\n    return this.#resolveFactory(ref, pluginId)?.then(factory => {\n      if (factory.service.scope === 'root') {\n        let existing = this.#rootServiceImplementations.get(factory);\n        if (!existing) {\n          this.#checkForMissingDeps(factory, pluginId);\n          const rootDeps = new Array<Promise<[name: string, impl: unknown]>>();\n\n          for (const [name, serviceRef] of Object.entries(factory.deps)) {\n            if (serviceRef.scope !== 'root') {\n              throw new Error(\n                `Failed to instantiate 'root' scoped service '${ref.id}' because it depends on '${serviceRef.scope}' scoped service '${serviceRef.id}'.`,\n              );\n            }\n            const target = this.get(serviceRef, pluginId)!;\n            rootDeps.push(target.then(impl => [name, impl]));\n          }\n\n          existing = Promise.all(rootDeps).then(entries =>\n            factory.factory(Object.fromEntries(entries), undefined),\n          );\n          this.#rootServiceImplementations.set(factory, existing);\n        }\n        return existing as Promise<T>;\n      }\n\n      let implementation = this.#implementations.get(factory);\n      if (!implementation) {\n        this.#checkForMissingDeps(factory, pluginId);\n        const rootDeps = new Array<Promise<[name: string, impl: unknown]>>();\n\n        for (const [name, serviceRef] of Object.entries(factory.deps)) {\n          if (serviceRef.scope === 'root') {\n            const target = this.get(serviceRef, pluginId)!;\n            rootDeps.push(target.then(impl => [name, impl]));\n          }\n        }\n\n        implementation = {\n          context: Promise.all(rootDeps)\n            .then(entries =>\n              factory.createRootContext?.(Object.fromEntries(entries)),\n            )\n            .catch(error => {\n              const cause = stringifyError(error);\n              throw new Error(\n                `Failed to instantiate service '${ref.id}' because createRootContext threw an error, ${cause}`,\n              );\n            }),\n          byPlugin: new Map(),\n        };\n\n        this.#implementations.set(factory, implementation);\n      }\n\n      let result = implementation.byPlugin.get(pluginId) as Promise<any>;\n      if (!result) {\n        const allDeps = new Array<Promise<[name: string, impl: unknown]>>();\n\n        for (const [name, serviceRef] of Object.entries(factory.deps)) {\n          const target = this.get(serviceRef, pluginId)!;\n          allDeps.push(target.then(impl => [name, impl]));\n        }\n\n        result = implementation.context\n          .then(context =>\n            Promise.all(allDeps).then(entries =>\n              factory.factory(Object.fromEntries(entries), context),\n            ),\n          )\n          .catch(error => {\n            const cause = stringifyError(error);\n            throw new Error(\n              `Failed to instantiate service '${ref.id}' for '${pluginId}' because the factory function threw an error, ${cause}`,\n            );\n          });\n        implementation.byPlugin.set(pluginId, result);\n      }\n\n      return result;\n    });\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ServiceFactory, BackendFeature } from '@backstage/backend-plugin-api';\nimport { BackendInitializer } from './BackendInitializer';\nimport { ServiceRegistry } from './ServiceRegistry';\nimport { Backend } from './types';\n\nexport class BackstageBackend implements Backend {\n  #services: ServiceRegistry;\n  #initializer: BackendInitializer;\n\n  constructor(apiFactories: ServiceFactory[]) {\n    this.#services = new ServiceRegistry(apiFactories);\n    this.#initializer = new BackendInitializer(this.#services);\n  }\n\n  add(feature: BackendFeature): void {\n    this.#initializer.add(feature);\n  }\n\n  async start(): Promise<void> {\n    await this.#initializer.start();\n  }\n\n  async stop(): Promise<void> {\n    await this.#initializer.stop();\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { coreServices } from '@backstage/backend-plugin-api';\nimport { BackstageBackend } from './BackstageBackend';\nimport { Backend, CreateSpecializedBackendOptions } from './types';\n\n/**\n * @public\n */\nexport function createSpecializedBackend(\n  options: CreateSpecializedBackendOptions,\n): Backend {\n  const services = options.services.map(sf =>\n    typeof sf === 'function' ? sf() : sf,\n  );\n\n  const exists = new Set<string>();\n  const duplicates = new Set<string>();\n  for (const { service } of services) {\n    if (exists.has(service.id)) {\n      duplicates.add(service.id);\n    } else {\n      exists.add(service.id);\n    }\n  }\n  if (duplicates.size > 0) {\n    const ids = Array.from(duplicates).join(', ');\n    throw new Error(`Duplicate service implementations provided for ${ids}`);\n  }\n  if (exists.has(coreServices.pluginMetadata.id)) {\n    throw new Error(\n      `The ${coreServices.pluginMetadata.id} service cannot be overridden`,\n    );\n  }\n\n  return new BackstageBackend(services);\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheManager } from '@backstage/backend-common';\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\n\n/** @public */\nexport const cacheServiceFactory = createServiceFactory({\n  service: coreServices.cache,\n  deps: {\n    config: coreServices.config,\n    plugin: coreServices.pluginMetadata,\n  },\n  async createRootContext({ config }) {\n    return CacheManager.fromConfig(config);\n  },\n  async factory({ plugin }, manager) {\n    return manager.forPlugin(plugin.getId()).getClient();\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport {\n  ConfigSources,\n  RemoteConfigSourceOptions,\n} from '@backstage/config-loader';\n\n/** @public */\nexport interface ConfigFactoryOptions {\n  /**\n   * Process arguments to use instead of the default `process.argv()`.\n   */\n  argv?: string[];\n\n  /**\n   * Enables and sets options for remote configuration loading.\n   */\n  remote?: Pick<RemoteConfigSourceOptions, 'reloadInterval'>;\n}\n\n/** @public */\nexport const configServiceFactory = createServiceFactory(\n  (options?: ConfigFactoryOptions) => ({\n    service: coreServices.config,\n    deps: {},\n    async factory() {\n      const source = ConfigSources.default({\n        argv: options?.argv,\n        remote: options?.remote,\n      });\n      console.log(`Loading config from ${source}`);\n      return await ConfigSources.toConfig(source);\n    },\n  }),\n);\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseManager } from '@backstage/backend-common';\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport { ConfigReader } from '@backstage/config';\n\n/** @public */\nexport const databaseServiceFactory = createServiceFactory({\n  service: coreServices.database,\n  deps: {\n    config: coreServices.config,\n    lifecycle: coreServices.lifecycle,\n    pluginMetadata: coreServices.pluginMetadata,\n  },\n  async createRootContext({ config }) {\n    return config.getOptional('backend.database')\n      ? DatabaseManager.fromConfig(config)\n      : DatabaseManager.fromConfig(\n          new ConfigReader({\n            backend: {\n              database: { client: 'better-sqlite3', connection: ':memory:' },\n            },\n          }),\n        );\n  },\n  async factory({ pluginMetadata, lifecycle }, databaseManager) {\n    return databaseManager.forPlugin(pluginMetadata.getId(), {\n      pluginMetadata,\n      lifecycle,\n    });\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SingleHostDiscovery } from '@backstage/backend-common';\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\n\n/** @public */\nexport const discoveryServiceFactory = createServiceFactory({\n  service: coreServices.discovery,\n  deps: {\n    config: coreServices.config,\n  },\n  async factory({ config }) {\n    return SingleHostDiscovery.fromConfig(config);\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createServiceFactory,\n  coreServices,\n} from '@backstage/backend-plugin-api';\nimport { Handler } from 'express';\n\n/**\n * @public\n */\nexport interface HttpRouterFactoryOptions {\n  /**\n   * A callback used to generate the path for each plugin, defaults to `/api/{pluginId}`.\n   */\n  getPath?(pluginId: string): string;\n}\n\n/** @public */\nexport const httpRouterServiceFactory = createServiceFactory(\n  (options?: HttpRouterFactoryOptions) => ({\n    service: coreServices.httpRouter,\n    deps: {\n      plugin: coreServices.pluginMetadata,\n      rootHttpRouter: coreServices.rootHttpRouter,\n    },\n    async factory({ plugin, rootHttpRouter }) {\n      const getPath = options?.getPath ?? (id => `/api/${id}`);\n      const path = getPath(plugin.getId());\n      return {\n        use(handler: Handler) {\n          rootHttpRouter.use(path, handler);\n        },\n      };\n    },\n  }),\n);\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport { DefaultIdentityClient } from '@backstage/plugin-auth-node';\n\n/**\n * An identity client options object which allows extra configurations\n *\n * @public\n */\nexport type IdentityFactoryOptions = {\n  issuer?: string;\n\n  /** JWS \"alg\" (Algorithm) Header Parameter values. Defaults to an array containing just ES256.\n   * More info on supported algorithms: https://github.com/panva/jose */\n  algorithms?: string[];\n};\n\n/** @public */\nexport const identityServiceFactory = createServiceFactory(\n  (options?: IdentityFactoryOptions) => ({\n    service: coreServices.identity,\n    deps: {\n      discovery: coreServices.discovery,\n    },\n    async factory({ discovery }) {\n      return DefaultIdentityClient.create({ discovery, ...options });\n    },\n  }),\n);\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createServiceFactory,\n  coreServices,\n  LifecycleServiceShutdownHook,\n  LifecycleServiceShutdownOptions,\n} from '@backstage/backend-plugin-api';\n\n/**\n * Allows plugins to register shutdown hooks that are run when the process is about to exit.\n * @public\n */\nexport const lifecycleServiceFactory = createServiceFactory({\n  service: coreServices.lifecycle,\n  deps: {\n    logger: coreServices.logger,\n    rootLifecycle: coreServices.rootLifecycle,\n    pluginMetadata: coreServices.pluginMetadata,\n  },\n  async factory({ rootLifecycle, logger, pluginMetadata }) {\n    const plugin = pluginMetadata.getId();\n    return {\n      addShutdownHook(\n        hook: LifecycleServiceShutdownHook,\n        options?: LifecycleServiceShutdownOptions,\n      ): void {\n        rootLifecycle.addShutdownHook(hook, {\n          logger: options?.logger?.child({ plugin }) ?? logger,\n        });\n      },\n    };\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createServiceFactory,\n  coreServices,\n} from '@backstage/backend-plugin-api';\n\n/** @public */\nexport const loggerServiceFactory = createServiceFactory({\n  service: coreServices.logger,\n  deps: {\n    rootLogger: coreServices.rootLogger,\n    plugin: coreServices.pluginMetadata,\n  },\n  factory({ rootLogger, plugin }) {\n    return rootLogger.child({ plugin: plugin.getId() });\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport { ServerPermissionClient } from '@backstage/plugin-permission-node';\n\n/** @public */\nexport const permissionsServiceFactory = createServiceFactory({\n  service: coreServices.permissions,\n  deps: {\n    config: coreServices.config,\n    discovery: coreServices.discovery,\n    tokenManager: coreServices.tokenManager,\n  },\n  async factory({ config, discovery, tokenManager }) {\n    return ServerPermissionClient.fromConfig(config, {\n      discovery,\n      tokenManager,\n    });\n  },\n});\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RootHttpRouterService } from '@backstage/backend-plugin-api';\nimport { Handler, Router } from 'express';\nimport trimEnd from 'lodash/trimEnd';\n\nfunction normalizePath(path: string): string {\n  return `${trimEnd(path, '/')}/`;\n}\n\n/**\n * Options for the {@link DefaultRootHttpRouter} class.\n *\n * @public\n */\nexport interface DefaultRootHttpRouterOptions {\n  /**\n   * The path to forward all unmatched requests to. Defaults to '/api/app' if\n   * not given. Disables index path behavior if false is given.\n   */\n  indexPath?: string | false;\n}\n\n/**\n * The default implementation of the {@link @backstage/backend-plugin-api#RootHttpRouterService} interface for\n * {@link @backstage/backend-plugin-api#coreServices.rootHttpRouter}.\n *\n * @public\n */\nexport class DefaultRootHttpRouter implements RootHttpRouterService {\n  #indexPath?: string;\n\n  #router = Router();\n  #namedRoutes = Router();\n  #indexRouter = Router();\n  #existingPaths = new Array<string>();\n\n  static create(options?: DefaultRootHttpRouterOptions) {\n    let indexPath;\n    if (options?.indexPath === false) {\n      indexPath = undefined;\n    } else if (options?.indexPath === undefined) {\n      indexPath = '/api/app';\n    } else if (options?.indexPath === '') {\n      throw new Error('indexPath option may not be an empty string');\n    } else {\n      indexPath = options.indexPath;\n    }\n    return new DefaultRootHttpRouter(indexPath);\n  }\n\n  private constructor(indexPath?: string) {\n    this.#indexPath = indexPath;\n    this.#router.use(this.#namedRoutes);\n    if (this.#indexPath) {\n      this.#router.use(this.#indexRouter);\n    }\n  }\n\n  use(path: string, handler: Handler) {\n    if (path.match(/^[/\\s]*$/)) {\n      throw new Error(`Root router path may not be empty`);\n    }\n    const conflictingPath = this.#findConflictingPath(path);\n    if (conflictingPath) {\n      throw new Error(\n        `Path ${path} conflicts with the existing path ${conflictingPath}`,\n      );\n    }\n    this.#existingPaths.push(path);\n    this.#namedRoutes.use(path, handler);\n\n    if (this.#indexPath === path) {\n      this.#indexRouter.use(handler);\n    }\n  }\n\n  handler(): Handler {\n    return this.#router;\n  }\n\n  #findConflictingPath(newPath: string): string | undefined {\n    const normalizedNewPath = normalizePath(newPath);\n    for (const path of this.#existingPaths) {\n      const normalizedPath = normalizePath(path);\n      if (normalizedPath.startsWith(normalizedNewPath)) {\n        return path;\n      }\n      if (normalizedNewPath.startsWith(normalizedPath)) {\n        return path;\n      }\n    }\n    return undefined;\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ConfigService,\n  coreServices,\n  createServiceFactory,\n  LifecycleService,\n  LoggerService,\n} from '@backstage/backend-plugin-api';\nimport express, { RequestHandler, Express } from 'express';\nimport {\n  createHttpServer,\n  MiddlewareFactory,\n  readHttpServerOptions,\n} from '../../../http';\nimport { DefaultRootHttpRouter } from './DefaultRootHttpRouter';\n\n/**\n * @public\n */\nexport interface RootHttpRouterConfigureContext {\n  app: Express;\n  middleware: MiddlewareFactory;\n  routes: RequestHandler;\n  config: ConfigService;\n  logger: LoggerService;\n  lifecycle: LifecycleService;\n}\n\n/**\n * @public\n */\nexport type RootHttpRouterFactoryOptions = {\n  /**\n   * The path to forward all unmatched requests to. Defaults to '/api/app' if\n   * not given. Disables index path behavior if false is given.\n   */\n  indexPath?: string | false;\n\n  configure?(context: RootHttpRouterConfigureContext): void;\n};\n\nfunction defaultConfigure(context: RootHttpRouterConfigureContext) {\n  const { app, routes, middleware } = context;\n  app.use(middleware.helmet());\n  app.use(middleware.cors());\n  app.use(middleware.compression());\n  app.use(middleware.logging());\n  app.use(routes);\n  app.use(middleware.notFound());\n  app.use(middleware.error());\n}\n\n/** @public */\nexport const rootHttpRouterServiceFactory = createServiceFactory(\n  (options?: RootHttpRouterFactoryOptions) => ({\n    service: coreServices.rootHttpRouter,\n    deps: {\n      config: coreServices.config,\n      rootLogger: coreServices.rootLogger,\n      lifecycle: coreServices.rootLifecycle,\n    },\n    async factory({ config, rootLogger, lifecycle }) {\n      const { indexPath, configure = defaultConfigure } = options ?? {};\n      const logger = rootLogger.child({ service: 'rootHttpRouter' });\n      const app = express();\n\n      const router = DefaultRootHttpRouter.create({ indexPath });\n      const middleware = MiddlewareFactory.create({ config, logger });\n\n      configure({\n        app,\n        routes: router.handler(),\n        middleware,\n        config,\n        logger,\n        lifecycle,\n      });\n\n      const server = await createHttpServer(\n        app,\n        readHttpServerOptions(config.getOptionalConfig('backend')),\n        { logger },\n      );\n\n      lifecycle.addShutdownHook(() => server.stop());\n\n      await server.start();\n\n      return router;\n    },\n  }),\n);\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createServiceFactory,\n  coreServices,\n} from '@backstage/backend-plugin-api';\nimport { WinstonLogger } from '../../../logging';\nimport { transports, format } from 'winston';\nimport { createConfigSecretEnumerator } from '../../../config';\n\n/** @public */\nexport const rootLoggerServiceFactory = createServiceFactory({\n  service: coreServices.rootLogger,\n  deps: {\n    config: coreServices.config,\n  },\n  async factory({ config }) {\n    const logger = WinstonLogger.create({\n      meta: {\n        service: 'backstage',\n      },\n      level: process.env.LOG_LEVEL || 'info',\n      format:\n        process.env.NODE_ENV === 'production'\n          ? format.json()\n          : WinstonLogger.colorFormat(),\n      transports: [new transports.Console()],\n    });\n\n    const secretEnumerator = await createConfigSecretEnumerator({ logger });\n    logger.addRedactions(secretEnumerator(config));\n    config.subscribe?.(() => logger.addRedactions(secretEnumerator(config)));\n\n    return logger;\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport { TaskScheduler } from '@backstage/backend-tasks';\n\n/** @public */\nexport const schedulerServiceFactory = createServiceFactory({\n  service: coreServices.scheduler,\n  deps: {\n    plugin: coreServices.pluginMetadata,\n    databaseManager: coreServices.database,\n    logger: coreServices.logger,\n  },\n  async factory({ plugin, databaseManager, logger }) {\n    return TaskScheduler.forPlugin({\n      pluginId: plugin.getId(),\n      databaseManager,\n      logger: loggerToWinstonLogger(logger),\n    });\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport { ServerTokenManager } from '@backstage/backend-common';\n\n/** @public */\nexport const tokenManagerServiceFactory = createServiceFactory({\n  service: coreServices.tokenManager,\n  deps: {\n    config: coreServices.config,\n    logger: coreServices.rootLogger,\n  },\n  createRootContext({ config, logger }) {\n    return ServerTokenManager.fromConfig(config, {\n      logger,\n    });\n  },\n  async factory(_deps, tokenManager) {\n    return tokenManager;\n  },\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { loggerToWinstonLogger, UrlReaders } from '@backstage/backend-common';\nimport {\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\n\n/** @public */\nexport const urlReaderServiceFactory = createServiceFactory({\n  service: coreServices.urlReader,\n  deps: {\n    config: coreServices.config,\n    logger: coreServices.logger,\n  },\n  async factory({ config, logger }) {\n    return UrlReaders.default({\n      config,\n      logger: loggerToWinstonLogger(logger),\n    });\n  },\n});\n"],"names":["ConfigReader","getPackages","loadConfigSchema","parseArgs","resolvePath","findPaths","config","loadConfig","fs","dirname","forge","stoppableServer","https","http","helmet","Minimatch","__privateAdd","__privateSet","compression","__privateGet","morgan","cors","serializeError","NotModifiedError","InputError","AuthenticationError","NotAllowedError","NotFoundError","ConflictError","NotImplementedError","createLogger","format","transports","createServiceFactory","coreServices","__privateMethod","_a","stringifyError","CacheManager","ConfigSources","DatabaseManager","SingleHostDiscovery","DefaultIdentityClient","ServerPermissionClient","trimEnd","Router","express","TaskScheduler","loggerToWinstonLogger","ServerTokenManager","UrlReaders"],"mappings":"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"}