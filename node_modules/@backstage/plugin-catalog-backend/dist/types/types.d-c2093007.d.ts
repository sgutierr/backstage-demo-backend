/**
 * A filter expression for entities.
 *
 * Any (at least one) of the outer sets must match, within which all of the
 * individual filters must match.
 * @public
 */
type EntityFilter = {
    allOf: EntityFilter[];
} | {
    anyOf: EntityFilter[];
} | {
    not: EntityFilter;
} | EntitiesSearchFilter;
/**
 * Matches rows in the search table.
 * @public
 */
type EntitiesSearchFilter = {
    /**
     * The key to match on.
     *
     * Matches are always case insensitive.
     */
    key: string;
    /**
     * Match on plain equality of values.
     *
     * Match on values that are equal to any of the given array items. Matches are
     * always case insensitive.
     */
    values?: string[];
};

export { EntitiesSearchFilter as E, EntityFilter as a };
