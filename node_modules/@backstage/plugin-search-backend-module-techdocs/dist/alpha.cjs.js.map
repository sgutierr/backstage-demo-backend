{"version":3,"file":"alpha.cjs.js","sources":["../src/alpha.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @packageDocumentation\n * A module for the search backend that exports TechDocs modules.\n */\n\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { TaskScheduleDefinition } from '@backstage/backend-tasks';\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport { searchIndexRegistryExtensionPoint } from '@backstage/plugin-search-backend-node/alpha';\n\nimport {\n  DefaultTechDocsCollatorFactory,\n  TechDocsCollatorFactoryOptions,\n} from '@backstage/plugin-search-backend-module-techdocs';\n\n/**\n * @alpha\n * Options for {@link searchModuleTechDocsCollator}.\n */\nexport type SearchModuleTechDocsCollatorOptions = Omit<\n  TechDocsCollatorFactoryOptions,\n  'logger' | 'discovery' | 'tokenManager'\n> & {\n  schedule?: TaskScheduleDefinition;\n};\n\n/**\n * @alpha\n * Search backend module for the TechDocs index.\n */\nexport const searchModuleTechDocsCollator = createBackendModule(\n  (options?: SearchModuleTechDocsCollatorOptions) => ({\n    moduleId: 'techDocsCollator',\n    pluginId: 'search',\n    register(env) {\n      env.registerInit({\n        deps: {\n          config: coreServices.config,\n          logger: coreServices.logger,\n          discovery: coreServices.discovery,\n          tokenManager: coreServices.tokenManager,\n          scheduler: coreServices.scheduler,\n          indexRegistry: searchIndexRegistryExtensionPoint,\n        },\n        async init({\n          config,\n          logger,\n          discovery,\n          tokenManager,\n          scheduler,\n          indexRegistry,\n        }) {\n          const defaultSchedule = {\n            frequency: { minutes: 10 },\n            timeout: { minutes: 15 },\n            initialDelay: { seconds: 3 },\n          };\n\n          indexRegistry.addCollator({\n            schedule: scheduler.createScheduledTaskRunner(\n              options?.schedule ?? defaultSchedule,\n            ),\n            factory: DefaultTechDocsCollatorFactory.fromConfig(config, {\n              ...options,\n              discovery,\n              tokenManager,\n              logger: loggerToWinstonLogger(logger),\n            }),\n          });\n        },\n      });\n    },\n  }),\n);\n"],"names":["createBackendModule","coreServices","searchIndexRegistryExtensionPoint","DefaultTechDocsCollatorFactory","loggerToWinstonLogger"],"mappings":";;;;;;;;;AAiDO,MAAM,4BAA+B,GAAAA,oCAAA;AAAA,EAC1C,CAAC,OAAmD,MAAA;AAAA,IAClD,QAAU,EAAA,kBAAA;AAAA,IACV,QAAU,EAAA,QAAA;AAAA,IACV,SAAS,GAAK,EAAA;AACZ,MAAA,GAAA,CAAI,YAAa,CAAA;AAAA,QACf,IAAM,EAAA;AAAA,UACJ,QAAQC,6BAAa,CAAA,MAAA;AAAA,UACrB,QAAQA,6BAAa,CAAA,MAAA;AAAA,UACrB,WAAWA,6BAAa,CAAA,SAAA;AAAA,UACxB,cAAcA,6BAAa,CAAA,YAAA;AAAA,UAC3B,WAAWA,6BAAa,CAAA,SAAA;AAAA,UACxB,aAAe,EAAAC,uCAAA;AAAA,SACjB;AAAA,QACA,MAAM,IAAK,CAAA;AAAA,UACT,MAAA;AAAA,UACA,MAAA;AAAA,UACA,SAAA;AAAA,UACA,YAAA;AAAA,UACA,SAAA;AAAA,UACA,aAAA;AAAA,SACC,EAAA;AAtEX,UAAA,IAAA,EAAA,CAAA;AAuEU,UAAA,MAAM,eAAkB,GAAA;AAAA,YACtB,SAAA,EAAW,EAAE,OAAA,EAAS,EAAG,EAAA;AAAA,YACzB,OAAA,EAAS,EAAE,OAAA,EAAS,EAAG,EAAA;AAAA,YACvB,YAAA,EAAc,EAAE,OAAA,EAAS,CAAE,EAAA;AAAA,WAC7B,CAAA;AAEA,UAAA,aAAA,CAAc,WAAY,CAAA;AAAA,YACxB,UAAU,SAAU,CAAA,yBAAA;AAAA,cAClB,CAAA,EAAA,GAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,aAAT,IAAqB,GAAA,EAAA,GAAA,eAAA;AAAA,aACvB;AAAA,YACA,OAAA,EAASC,gEAA+B,CAAA,UAAA,CAAW,MAAQ,EAAA;AAAA,cACzD,GAAG,OAAA;AAAA,cACH,SAAA;AAAA,cACA,YAAA;AAAA,cACA,MAAA,EAAQC,oCAAsB,MAAM,CAAA;AAAA,aACrC,CAAA;AAAA,WACF,CAAA,CAAA;AAAA,SACH;AAAA,OACD,CAAA,CAAA;AAAA,KACH;AAAA,GACF,CAAA;AACF;;;;"}